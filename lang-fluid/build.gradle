import org.jetbrains.grammarkit.tasks.GenerateLexer
import org.jetbrains.grammarkit.tasks.GenerateParser

def htmlFixer = { htmlFile -> file(htmlFile).text.replace('<html>', '').replace('</html>', '') }

def genRoot = file('gen')
sourceSets {
    main {
        java.srcDirs += genRoot
        resources.srcDir 'resources'
    }
    test {
        java.srcDir 'test'
        resources.srcDirs 'testData'
    }
}

idea {
    module {
        generatedSourceDirs += genRoot
    }
}

intellij {
    version ideaVersion
    pluginName 'TYPO3 Fluid Support'
    plugins = [
        "com.jetbrains.php:${phpPluginVersion}",
        'CSS',
        'java',
        'java-i18n',
        'properties',
        "PsiViewer:${psiViewerPluginVersion}"
    ]
}

patchPluginXml {
    if (customSinceBuild) {
        sinceBuild customSinceBuild
    }
    if (customUntilBuild) {
        untilBuild customUntilBuild
    }

    changeNotes = htmlFixer('src/main/resources/META-INF/change-notes.html')
    pluginDescription = htmlFixer('src/main/resources/META-INF/description.html')
}

publishPlugin {
    channels 'nightly'
}

task generateFluidLexer(type: GenerateLexer) {
    source = "src/main/grammars/FluidLexer.flex"
    targetDir = "gen/com/cedricziel/idea/fluid/lang/lexer"
    targetClass = "_FluidLexer"
}

task generateFluidParser(type: GenerateParser) {
    source = "src/main/grammars/FluidParser.bnf"
    targetRoot = 'gen'
    pathToParser = '/com/cedricziel/idea/fluid/lang/parser/FluidParserGenerated.java'
    pathToPsiRoot = '/com/cedricziel/idea/fluid/lang/psi'
}

compileJava {
    dependsOn generateFluidParser, generateFluidLexer
}

clean.doLast {
    file('gen').deleteDir()
}
