import org.jetbrains.grammarkit.tasks.*

apply plugin: 'org.jetbrains.grammarkit'

def genRoot = file('gen')
sourceSets {
    main {
        java.srcDirs += genRoot
        resources.srcDir 'resources'
    }
    test {
        java.srcDir 'test'
        resources.srcDirs 'testData'
    }
}

idea {
    module {
        generatedSourceDirs += genRoot
    }
}

def usedPlugins = [
    "com.jetbrains.php:${phpPluginVersion}",
    'CSS',
    'java',
    'java-i18n',
    'properties',
    'yaml',
    "PsiViewer:${psiViewerPluginVersion}",
]
intellij {
    version.set(ideaVersion)
    pluginName.set(pluginNameTypoScript)
    plugins = usedPlugins
}

def publishChannels = ["nightly"]
publishPlugin {
    channels.set(publishChannels)
    token.set(System.getenv('PUBLISH_TOKEN'))
}

task generateTypoScriptLexer(type: GenerateLexer) {
    source = "src/main/grammars/TypoScriptLexer.flex"
    targetDir = "gen/com/cedricziel/idea/typoscript/lang/lexer"
    targetClass = "_TypoScriptLexer"
}

task generateTypoScriptParser(type: GenerateParser) {
    source = "src/main/grammars/TypoScriptParser.bnf"
    targetRoot = 'gen'
    pathToParser = '/com/cedricziel/idea/typoscript/lang/parser/TypoScriptParserGenerated.java'
    pathToPsiRoot = '/com/cedricziel/idea/typoscript/lang/psi'
}

compileJava {
    dependsOn generateTypoScriptParser, generateTypoScriptLexer
}

clean.doLast {
    file('gen').deleteDir()
}
