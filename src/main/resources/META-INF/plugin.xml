<idea-plugin>
    <id>com.cedricziel.idea.typo3</id>
    <name>TYPO3 CMS Plugin</name>
    <version>0.1.12</version>
    <vendor email="cedric@cedric-ziel.com" url="https://www.cedric-ziel.com">Cedric Ziel</vendor>

    <description><![CDATA[
<h1>TYPO3 CMS Plugin</h1>

<a href="https://github.com/cedricziel/idea-php-typo3-plugin">GitHub Repository</a>
<br/>

<strong>beta quality</strong>

<br/>

<h2>Features:</h2>

<br/>

<h3>Autocompletion enhancements</h3>

<p>
  The plugin reads the local project and tries to parse out usage of well-known APIs
  and provides you with autocompletion on points it knows for example possible parameter names.
</p>

<ul>
  <li>Autocompletion for calls to IconFactory::getIcon with available Icons and preview</li>
  <li>Line marker for Icon-Api usages with jump-to-definition and preview</li>
  <li>TypeProvider for `$GLOBALS['TYPO3_DB']`, `$GLOBALS['TSFE']` and `$GLOBALS['BE_USER']`</li>
  <li>Line marker for extbase entities</li>
</ul>

<br/>

<h3>Service Locator & Extbase Dependency Injection Container</h3>

<p>
  The plugin provides you with greater code stability, since the return types of
  instance creations are inferred, giving you stable auto-completion and insight
  into the written code.
</p>

<ul>
  <li>infer return type of GeneralUtility::makeInstance() calls without meta file</li>
  <li>infer return type of GeneralUtility::makeInstanceService() calls without meta file</li>
  <li>infer return type of ObjectManager::get() calls without meta file</li>
</ul>

<h3>Routing</h3>

<br/>

<h4>Backend</h4>

<br/>

<p>
  The plugin parses the available route names in the core and extensions. More precisely
  it parses the `Configuration/Backend/(Ajax)Routes.php` files.
</p>

<ul>
  <li>completion for backend route names on BackendUtility::getAjaxUrl()</li>
  <li>completion for backend route names on UriBuilder::buildUriFromRoute()</li>
  <li>annotations for both valid and invalid route references</li>
  <li>line marker to allow quick navigation to the route definition</li>
</ul>

<h3>Code inspections</h3>

<br/>

<ul>
  <li>Extbase property injection (@inject) performance inspection</li>
</ul>

<br/>

<h3>Code generation</h3>

<br/>

<ul>
  <li>Fluid Styled Content Element (experimental)</li>
</ul>

<br/>

<h2>Credits</h2>
<p>Thank you to <a href="https://github.com/Haehnchen">Daniel Espendiller</a> and <a href="https://github.com/adrienbrault">Adrien Brault</a>
for providing their <a href="https://github.com/Haehnchen/idea-php-symfony2-plugin">Symfony2 Plugin</a> in the first place.
It is a great inspiration for possible solutions and parts of the code.</p>


<h2><a href="https://github.com/cedricziel/idea-php-typo3-plugin/graphs/contributors">Contributors</a></h2>
<ul>
    <li><a href="https://github.com/cedricziel">Cedric Ziel</a></li>
    <li><a href="https://github.com/cedricziel/idea-php-typo3-plugin/graphs/contributors">GitHub Contributors</a></li>
</ul>
    ]]></description>

    <change-notes><![CDATA[

<h2>0.1.12</h2>
<ul>
  <li>Prevent NPE on CE creation</li>
</ul>

<h2>0.1.11</h2>
<ul>
  <li>Icon API: Parse flag icons</li>
</ul>

<h2>0.1.10</h2>
<ul>
  <li>Bugfix: Remove entity line marker</li>
  <li>Stability: Scope icon providers by project and make access synchronized</li>
</ul>

<h2>0.1.9</h2>
<ul>
  <li>Add generation of Fluid Styled Content elements</li>
  <li>Change severity of icon not found from error to warning since user icons are not yet supported</li>
  <li>Add line marker to extbase entities</li>
</ul>

<h2>0.1.8</h2>
<ul>
  <li>Added TypeProvider for $GLOBALS['TYPO3_DB'], $GLOBALS['TSFE'], $GLOBALS['BE_USER']</li>
</ul>

<h2>0.1.7</h2>
<ul>
  <li>QuickFix for Extbase property injection</li>
</ul>

<h2>0.1.6</h2>
<ul>
  <li>New icon for icon type objects</li>
  <li>Icon name completion for core icons on calls to IconFactory::getIcon</li>
  <li>Annotators for icon references (with preview and jump-to-definition)</li>
</ul>

<h2>0.1.5</h2>
<ul>
  <li>New icon for route type objects</li>
</ul>

<h2>0.1.4</h2>
<ul>
  <li>Annotator for both valid and invalid route references to make them distinguishable from normal strings</li>
  <li>LineMarkerProvider to allow quick navigation to the route definition</li>
  <li>Extbase property injection (@inject) performance inspection</li>
</ul>

<h2>0.1.3</h2>
<ul>
    <li>Added route name completion for BackendUtility::getAjaxUrl()</li>
    <li>Added route name completion for UriBuilder::buildUriFromRoute()</li>
</ul>

<h2>0.1.2</h2>
<ul>
    <li>Added TypeProvider for GeneralUtility::makeInstanceService</li>
</ul>

<h2>0.1.1</h2>
<ul>
    <li>Added TypeProvider for ObjectManager::get</li>
</ul>

<h2>0.1.0</h2>
<ul>
    <li>Added TypeProvider for GeneralUtility::makeInstance</li>
</ul>

<br/>
    ]]>
    </change-notes>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
    <idea-version since-build="171.0"/>

    <depends>com.intellij.modules.platform</depends>
    <depends>com.jetbrains.php</depends>

    <extensions defaultExtensionNs="com.intellij">
        <!-- Add your extensions here -->
        <php.typeProvider2 implementation="com.cedricziel.idea.typo3.provider.GeneralUtilityTypeProvider"/>
        <php.typeProvider2 implementation="com.cedricziel.idea.typo3.provider.GeneralUtilityServiceTypeProvider"/>
        <php.typeProvider2 implementation="com.cedricziel.idea.typo3.provider.ObjectManagerTypeProvider"/>
        <php.typeProvider2 implementation="com.cedricziel.idea.typo3.provider.PhpGlobalsTypeProvider"/>

        <!-- indexes -->
        <fileBasedIndex implementation="com.cedricziel.idea.typo3.index.CoreServiceMapStubIndex"/>

        <!-- completion -->
        <completion.contributor language="PHP"
                                implementationClass="com.cedricziel.idea.typo3.codeInsight.IconCompletionContributor"/>
        <completion.contributor language="PHP"
                                implementationClass="com.cedricziel.idea.typo3.codeInsight.RoutesCompletionContributor"/>

        <!-- annotation -->
        <annotator language="PHP" implementationClass="com.cedricziel.idea.typo3.annotation.IconAnnotator"/>
        <annotator language="PHP" implementationClass="com.cedricziel.idea.typo3.annotation.RouteAnnotator"/>

        <!-- marker -->
        <codeInsight.lineMarkerProvider language="PHP"
                                        implementationClass="com.cedricziel.idea.typo3.codeInsight.RouteLineMarkerProvider"/>
        <codeInsight.lineMarkerProvider language="PHP"
                                        implementationClass="com.cedricziel.idea.typo3.codeInsight.IconLineMarkerProvider"/>
        <!--
        <codeInsight.lineMarkerProvider language="PHP"
                                        implementationClass="com.cedricziel.idea.typo3.codeInsight.extbase.EntityLineMarkerProvider"/>
        -->

        <!-- inspections -->
        <inspectionToolProvider
                implementation="com.cedricziel.idea.typo3.codeInspection.ExtbasePropertyInjectionProvider"/>
    </extensions>

    <extensions defaultExtensionNs="com.jetbrains.php">
        <!-- Add your extensions here -->
    </extensions>

    <actions>
        <group id="TYPO3GenerateGroup"
               text="TYPO3 CMS"
               popup="false"
               icon="TYPO3Icons.TYPO3_ICON"
        >
            <group id="TYPO3GenerateGroup.ContentElement"
                   text="Content Element"
                   icon="TYPO3Icons.TYPO3_ICON"
                   popup="true"
            >
                <action id="TYPO3CMS.Generation.FSCElement"
                        class="com.cedricziel.idea.typo3.generation.action.GenerateFscElementAction"/>
            </group>

            <add-to-group group-id="NewGroup" anchor="last"/>
        </group>
    </actions>

    <project-components>
        <component>
            <implementation-class>com.cedricziel.idea.typo3.TYPO3CMSProjectComponent</implementation-class>
        </component>
    </project-components>
</idea-plugin>
