<idea-plugin url="https://github.com/cedricziel/idea-php-typo3-plugin">
    <id>com.cedricziel.idea.typo3</id>
    <name>TYPO3 CMS Plugin</name>
    <version>0.2.47</version>
    <vendor email="cedric@cedric-ziel.com" url="https://www.cedric-ziel.com">Cedric Ziel</vendor>

    <description><![CDATA[
<h1>TYPO3 CMS Plugin</h1>

<a href="https://github.com/cedricziel/idea-php-typo3-plugin">GitHub Repository</a>
<br/>

<strong>beta quality</strong>

<br/>

<h2>Features:</h2>

<br/>

<h3>Autocompletion enhancements</h3>

<p>
  The plugin reads the local project and tries to parse out usage of well-known APIs
  and provides you with autocompletion on points it knows for example possible parameter names.
</p>

<ul>
  <li>Autocompletion for calls to IconFactory::getIcon with available Icons and preview</li>
  <li>Line marker for Icon-Api usages with jump-to-definition and preview</li>
  <li>TypeProvider for `$GLOBALS['TYPO3_DB']`, `$GLOBALS['TSFE']` and `$GLOBALS['BE_USER']`</li>
  <li>Line marker for extbase entities</li>
</ul>

<br/>

<h3>Service Locator & Extbase Dependency Injection Container</h3>

<p>
  The plugin provides you with greater code stability, since the return types of
  instance creations are inferred, giving you stable auto-completion and insight
  into the written code.
</p>

<ul>
  <li>infer return type of GeneralUtility::makeInstance() calls without meta file</li>
  <li>infer return type of GeneralUtility::makeInstanceService() calls without meta file</li>
  <li>infer return type of ObjectManager::get() calls without meta file</li>
</ul>

<h3>Routing</h3>

<br/>

<h4>Backend</h4>

<br/>

<p>
  The plugin parses the available route names in the core and extensions. More precisely
  it parses the `Configuration/Backend/(Ajax)Routes.php` files.
</p>

<ul>
  <li>completion for backend route names on BackendUtility::getAjaxUrl()</li>
  <li>completion for backend route names on UriBuilder::buildUriFromRoute()</li>
  <li>annotations for both valid and invalid route references</li>
  <li>line marker to allow quick navigation to the route definition</li>
</ul>

<br/>

<h3>TCA</h3>
<ul>
  <li>completion for built-in TCA render types</li>
  <li>completion for built-in TCA column types</li>
</ul>

<br/>

<h3>Code inspections</h3>

<br/>

<ul>
  <li>Extbase property injection (@inject) performance inspection</li>
  <li>TCA renderTypes (+ inspections)</li>
  <li>TCA column types (+ inspections)</li>
</ul>

<br/>

<h3>Code generation</h3>

<br/>

<ul>
  <li>Extbase ActionController</li>
  <li>Extbase ActionController action</li>
  <li>Extbase Entity class</li>
  <li>Fluid ViewHelper</li>
  <li>Fluid Styled Content Element (experimental)</li>
</ul>

<br/>

<h2>Credits</h2>
<p>Thank you to <a href="https://github.com/Haehnchen">Daniel Espendiller</a> and <a href="https://github.com/adrienbrault">Adrien Brault</a>
for providing their <a href="https://github.com/Haehnchen/idea-php-symfony2-plugin">Symfony2 Plugin</a> in the first place.
It is a great inspiration for possible solutions and parts of the code.</p>


<h2><a href="https://github.com/cedricziel/idea-php-typo3-plugin/graphs/contributors">Contributors</a></h2>
<ul>
    <li><a href="https://github.com/cedricziel">Cedric Ziel</a></li>
    <li><a href="https://github.com/cedricziel/idea-php-typo3-plugin/graphs/contributors">GitHub Contributors</a></li>
</ul>
    ]]></description>

    <change-notes><![CDATA[

<ul>
  <li>Infer types from ObjectStorage properties</li>
</ul>

    ]]>
    </change-notes>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
    <idea-version since-build="173"/>

    <depends>com.intellij.modules.platform</depends>
    <depends>com.jetbrains.php</depends>
    <depends>com.intellij.modules.xml</depends>
    <depends>org.jetbrains.plugins.yaml</depends>
    <depends>org.intellij.intelliLang</depends>
    <depends optional="true" config-file="typoscript-plugin.xml">de.sgalinski.typoscript.plugin.id</depends>

    <extensions defaultExtensionNs="com.jetbrains.php">
        <typeProvider3 implementation="com.cedricziel.idea.typo3.provider.GeneralUtilityTypeProvider"/>
        <typeProvider3 implementation="com.cedricziel.idea.typo3.provider.GeneralUtilityServiceTypeProvider"/>
        <typeProvider3 implementation="com.cedricziel.idea.typo3.provider.ObjectManagerTypeProvider"/>
        <typeProvider3 implementation="com.cedricziel.idea.typo3.provider.PhpGlobalsTypeProvider"/>
        <typeProvider3 implementation="com.cedricziel.idea.typo3.provider.PhpGlobalsTypeProvider"/>

        <!-- extbase persistence -->
        <referenceResolver implementation="com.cedricziel.idea.typo3.extbase.persistence.ExtbasePersistenceReferenceResolver"/>

        <typeProvider3 implementation="com.cedricziel.idea.typo3.extbase.persistence.ExtbaseModelCollectionReturnTypeProvider"/>
    </extensions>

    <extensions defaultExtensionNs="com.intellij">

        <projectService serviceImplementation="com.cedricziel.idea.typo3.TYPO3CMSSettings"/>

        <directoryProjectGenerator implementation="com.cedricziel.idea.typo3.projectTemplate.TYPO3CMSClassicLayoutDirectoryProjectGenerator"/>
        <projectTemplatesFactory implementation="com.cedricziel.idea.typo3.projectTemplate.TYPO3CMSProjectTemplatesFactory"/>

        <!-- indexes -->
        <fileBasedIndex implementation="com.cedricziel.idea.typo3.index.CoreServiceMapStubIndex"/>
        <fileBasedIndex implementation="com.cedricziel.idea.typo3.index.ExtensionNameStubIndex"/>
        <fileBasedIndex implementation="com.cedricziel.idea.typo3.index.IconIndex"/>
        <fileBasedIndex implementation="com.cedricziel.idea.typo3.index.ResourcePathIndex"/>
        <fileBasedIndex implementation="com.cedricziel.idea.typo3.index.RouteIndex"/>
        <fileBasedIndex implementation="com.cedricziel.idea.typo3.index.TablenameFileIndex"/>
        <fileBasedIndex implementation="com.cedricziel.idea.typo3.index.php.LegacyClassesForIDEIndex"/>
        <fileBasedIndex implementation="com.cedricziel.idea.typo3.index.TranslationIndex"/>
        <fileBasedIndex implementation="com.cedricziel.idea.typo3.index.extbase.ControllerActionIndex"/>

        <!-- extensionscanner indexes -->
        <fileBasedIndex implementation="com.cedricziel.idea.typo3.index.extensionScanner.MethodArgumentDroppedIndex"/>


        <!-- completion -->
        <completion.contributor language="PHP"
                                implementationClass="com.cedricziel.idea.typo3.tca.codeInsight.TCACompletionContributor"/>

        <!-- annotation -->
        <annotator language="PHP" implementationClass="com.cedricziel.idea.typo3.annotation.IconAnnotator"/>
        <annotator language="PHP" implementationClass="com.cedricziel.idea.typo3.annotation.RouteAnnotator"/>

        <annotator language="PHP" implementationClass="com.cedricziel.idea.typo3.resources.annotation.PathResourceAnnotator"/>
        <annotator language="yaml" implementationClass="com.cedricziel.idea.typo3.resources.annotation.PathResourceAnnotator"/>

        <annotator language="PHP" implementationClass="com.cedricziel.idea.typo3.translation.annotation.TranslationAnnotator"/>

        <!-- marker -->
        <codeInsight.lineMarkerProvider language="PHP"
                                        implementationClass="com.cedricziel.idea.typo3.codeInsight.RouteLineMarkerProvider"/>
        <!--
        <codeInsight.lineMarkerProvider language="PHP"
                                        implementationClass="com.cedricziel.idea.typo3.codeInsight.extbase.EntityLineMarkerProvider"/>
        -->

        <!-- goto handlers -->
        <gotoDeclarationHandler implementation="com.cedricziel.idea.typo3.codeInsight.navigation.PathResourceGotoDeclarationHandler"/>

        <!-- inspections -->

        <inspectionToolProvider implementation="com.cedricziel.idea.typo3.codeInspection.TYPO3InspectionToolProvider"/>

        <localInspection language="PHP" groupPath="TYPO3 CMS,Translation"
                         shortName="TranslationMissingInspection"  displayName="Translation missing"
                         groupName="Translation"
                         enabledByDefault="true"                   level="WARNING"
                         implementationClass="com.cedricziel.idea.typo3.translation.codeInspection.TranslationMissingInspection" />

        <psi.referenceContributor implementation="com.cedricziel.idea.typo3.icons.IconReferenceContributor"/>
        <psi.referenceContributor implementation="com.cedricziel.idea.typo3.routing.RouteReferenceContributor"/>
        <psi.referenceContributor implementation="com.cedricziel.idea.typo3.resources.ResourceReferenceContributor"/>
        <psi.referenceContributor implementation="com.cedricziel.idea.typo3.tca.TableReferenceContributor"/>
        <psi.referenceContributor implementation="com.cedricziel.idea.typo3.translation.TranslationReferenceContributor"/>
        <psi.referenceContributor implementation="com.cedricziel.idea.typo3.extbase.controller.ControllerActionReferenceContributor"/>

        <!-- code folding -->
        <lang.foldingBuilder language="PHP" implementationClass="com.cedricziel.idea.typo3.translation.TranslationFoldingBuilder"/>
        <lang.foldingBuilder language="PHP" implementationClass="com.cedricziel.idea.typo3.routing.RouteFoldingBuilder"/>

        <!-- extbase persistence -->
        <completion.contributor language="PHP" implementationClass="com.cedricziel.idea.typo3.extbase.persistence.ExtbasePersistenceCompletionContributor"/>
    </extensions>

    <actions>
        <group id="TYPO3GenerateGroup"
               text="TYPO3 CMS"
               popup="false"
               icon="TYPO3Icons.TYPO3_ICON"
        >
            <group id="TYPO3GenerateGroup.ContentElement"
                   text="Content Element"
                   icon="TYPO3Icons.TYPO3_ICON"
                   popup="true"
            >
                <action id="TYPO3CMS.Generation.FSCElement"
                        class="com.cedricziel.idea.typo3.action.GenerateFscElementAction"/>
            </group>

            <action id="TYPO3CMS.Generation.ActionController"
                    class="com.cedricziel.idea.typo3.action.GenerateActionControllerAction"/>

            <action id="TYPO3CMS.Generation.Entity"
                    class="com.cedricziel.idea.typo3.action.GenerateExtbaseEntityAction"/>

            <action id="TYPO3CMS.Generation.ViewHelper"
                    class="com.cedricziel.idea.typo3.action.GenerateViewHelperAction"/>

            <add-to-group group-id="NewGroup" anchor="last"/>
        </group>

        <action class="com.cedricziel.idea.typo3.action.ExtbaseControllerActionAction" id="TYPO3CMS.Generation.Extbase.Controller.Action">
            <add-to-group group-id="GenerateGroup" anchor="last"/>
        </action>
    </actions>

    <project-components>
        <component>
            <implementation-class>com.cedricziel.idea.typo3.TYPO3CMSProjectComponent</implementation-class>
        </component>
        <component>
            <implementation-class>com.cedricziel.idea.typo3.XLFFileTypeApplicationComponent</implementation-class>
        </component>
    </project-components>
</idea-plugin>
