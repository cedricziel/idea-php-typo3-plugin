import org.gradle.api.tasks.testing.logging.TestExceptionFormat

plugins {
    id "org.jetbrains.intellij" version "1.13.1" apply false
    id 'java'
    id "org.jetbrains.grammarkit" version "${grammarKitPluginVersion}" apply false
    id 'org.jetbrains.changelog' version '2.0.0'
}

repositories {
    mavenCentral()
}

def htmlFixer = { htmlFile -> file(htmlFile).text.replace('<html>', '').replace('</html>', '') }

group pluginGroup

allprojects {
    repositories {
        mavenCentral()
    }

    apply plugin: 'java'
    apply plugin: 'org.jetbrains.changelog'

    sourceCompatibility = javaVersion
    targetCompatibility = javaTargetVersion
    tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }

    version = pluginVersion

    test {
        scanForTestClasses false
        include "**/*Test.class"
    }
}

subprojects {
    apply plugin: 'idea'
    apply plugin: 'org.jetbrains.intellij'
    apply plugin: 'java'
    apply plugin: 'org.jetbrains.grammarkit'

    changelog {
        version = pluginVersion
        path = "${project.rootProject.projectDir}/CHANGELOG.md"
        headerParserRegex = ~/\d+\.\d+\.\d+/
        itemPrefix = "-"
        keepUnreleasedSection = true
        unreleasedTerm = "[Unreleased]"
        groups = ["Added", "Changed", "Deprecated", "Removed", "Fixed", "Security"]
    }

    intellij {
        version.set(ideaVersion)
        updateSinceUntilBuild.set(true)

        tasks {
            "buildSearchableOptions" {
                enabled = false
            }
        }
    }

    patchPluginXml {
        if (customSinceBuild) {
            sinceBuild.set(customSinceBuild)
        }
        if (customUntilBuild) {
            untilBuild.set(customUntilBuild)
        }

        changeNotes.set(provider { changelog.getLatest().toHTML() })
        pluginDescription.set(htmlFixer("${project.projectDir}/src/main/resources/META-INF/description.html"))
    }

    grammarKit {
    }

    runPluginVerifier {
        ideVersions.set(pluginVerifierIdeVersions.split(',').toList())
    }

    test.testLogging.exceptionFormat = TestExceptionFormat.FULL
}

wrapper {
    gradleVersion '7.3'
}

test.testLogging.exceptionFormat = TestExceptionFormat.FULL
