import org.gradle.api.tasks.testing.logging.TestExceptionFormat

plugins {
    id "org.jetbrains.intellij" version "0.6.4"
    id "org.jetbrains.grammarkit" version "${grammarKitPluginVersion}" apply false
    id 'com.palantir.git-version' version "0.12.3"
}

repositories {
    mavenCentral()
    jcenter()
}

def details = versionDetails()

group 'com.cedricziel.idea'

allprojects {
    apply plugin: 'java'
    sourceCompatibility = javaVersion
    targetCompatibility = javaTargetVersion
    tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }

    if (details.isCleanTag) {
        version = "$customSinceBuild.${details.lastTag.substring(3)}"
    } else {
        version = "$customSinceBuild.${details.lastTag.substring(3)}.${details.gitHash}-SNAPSHOT"
    }

    intellij {
        version ideaVersion
        updateSinceUntilBuild true
    }

    patchPluginXml {
        if (customSinceBuild) {
            sinceBuild customSinceBuild
        }
        if (customUntilBuild) {
            untilBuild customUntilBuild
        }
    }
}

subprojects {
    apply plugin: 'idea'
    apply plugin: 'org.jetbrains.intellij'
    apply plugin: 'java'
    apply plugin: "org.jetbrains.grammarkit"

    repositories {
        mavenCentral()
        jcenter()
    }

    intellij {
        version ideaVersion
        sameSinceUntilBuild Boolean.valueOf(isEAP)
        updateSinceUntilBuild true

        tasks {
            "buildSearchableOptions" {
                enabled = false
            }
        }
    }

    publishPlugin {
        token System.getenv('IJ_REPO_TOKEN')
    }

    patchPluginXml {
        if (customSinceBuild) {
            sinceBuild customSinceBuild
        }
        if (customUntilBuild) {
            untilBuild customUntilBuild
        }
    }

    grammarKit {
        jflexRelease = jFlexRelease
    }

    test.testLogging.exceptionFormat = TestExceptionFormat.FULL
}

wrapper {
    gradleVersion '6.2'
}

test.testLogging.exceptionFormat = TestExceptionFormat.FULL
